[comment encoding = UTF-8 /]
 [module generate('http://www.eclipse.org/uml2/5.0.0/UML')/]
 
[import me::mysoft::acceleo::sample::services::uml2services /]

 [template public generateElement(aClass : Class)] 
  [comment /]
[if (aClass.hasStereotype('Bean'))]
[file (aClass.classFileName(), false, 'UTF-8')]
package [aClass.containingPackages().name->sep('.')/]
	/**
	* @generated
	*/
   public class [aClass.name.toUpperFirst()/] {
   [for (p: Property | aClass.attribute) separator('\n')]
	/**
	* @generated
	*/
     private [p.type.name/] [p.name/];
   [/for]
 
   [for (p: Property | aClass.attribute) separator('\n')]
	/**
	* @generated
	*/
     public [p.type.name/] get[p.name.toUpperFirst()/]() {
       return this.[p.name/];
     }
   [/for]
 
   [for (o: Operation | aClass.ownedOperation) separator('\n')]
	/**
	* @generated NOT
	*/
     public [o.type.name/] [o.name/]() {
       // TODO should be implemented
     }
   [/for]
   }
 [/file]
[/if]
 [/template]

[query public classFileName (aClass : Class) : String =
aClass.qualifiedName().replaceAll('\\.','/').concat('.java')
/]

[query public qualifiedName (aClass : Class) : String =
aClass.containingPackages().name->sep('.')->including('.')->including(aClass.name)->toString()
/]

[query public containingPackages (aClass : Class) : Sequence(Package) =
aClass.ancestors(Package)->reject(oclIsKindOf(Model))->reverse()
/]
